---
constants:
  __name: "{{ name }}_{{ __guid }}"
variables:
  name:
    desc: |
      The **base name** for the resources to be created.
      - Used for all related resources such as certificates, proxies, and backend services
      - Must be unique within the GCP project
    required: true
    suggest: "secure-data-in-transit"
    group: General
  certificate_path:
    desc: |
      The **path to the SSL certificate file** for the self-managed SSL certificate.
      - PEM-formatted certificate
    required: true
    suggest: "/path/to/certificate.crt"
    group: SSL Configuration
  private_key_path:
    desc: |
      The **path to the private key file** for the self-managed SSL certificate.
      - PEM-formatted private key
    required: true
    suggest: "/path/to/private.key"
    group: SSL Configuration
  host_names:
    desc: |
      A list of hostnames for the URL map's host rules.
      - Must be valid DNS hostnames
    required: true
    suggest: ["domain.com","example.com"]
    group: URL Configuration
  backend_service_name:
    desc: |
      The name of the backend service.
      - Must be unique within the GCP project
    required: true
    suggest: "backend-service"
    links_to: resource.google_compute_backend_service.id
    group: Backend Configuration
  health_check_name:
    desc: |
      The name of the HTTP health check resource.
    required: true
    suggest: "http-health-check"
    links_to: resource.google_compute_http_health_check.id
    group: Health Check Configuration
  check_interval_sec:
    desc: "Interval in seconds for the health check to run"
    required: true
    suggest: 1
    group: Health Check Configuration
  timeout_sec:
    desc: "Timeout in seconds for the health check to wait for a response"
    required: true
    suggest: 10
    group: Health Check Configuration
---

# SSL Certificate
resource "google_compute_ssl_certificate" "{{ __name }}" {
  name_prefix = "{{ name }}-cert-"
  private_key = file("{{ private_key_path }}")
  certificate = file("{{ certificate_path }}")

  lifecycle {
    create_before_destroy = true
  }
}

# Target HTTPS Proxy
resource "google_compute_target_https_proxy" "{{ __name }}" {
  name             = "{{ name }}-proxy"
  url_map          = google_compute_url_map.{{ __name }}.id
  ssl_certificates = [google_compute_ssl_certificate.{{ __name }}.id]
}

# URL Map
resource "google_compute_url_map" "{{ __name }}" {
  name        = "{{ name }}-url-map"
  description = "URL map for {{ name }}"

  default_service = google_compute_backend_service.{{ backend_service_name }}.id

  host_rule {
    hosts        = {{ host_names }}
    path_matcher = "allpaths"
  }

  path_matcher {
    name            = "allpaths"
    default_service = google_compute_backend_service.{{ backend_service_name }}.id

    path_rule {
      paths   = ["/*"]
      service = google_compute_backend_service.{{ backend_service_name }}.id
    }
  }
}

# Backend Service
resource "google_compute_backend_service" "{{ backend_service_name }}" {
  name        = "{{ backend_service_name }}"
  port_name   = "http"
  protocol    = "HTTP"
  timeout_sec = 10

  health_checks = [google_compute_http_health_check.{{ health_check_name }}.id]
}

# HTTP Health Check
resource "google_compute_http_health_check" "{{ health_check_name }}" {
  name               = "{{ health_check_name }}"
  request_path       = "/"
  check_interval_sec = "{{ check_interval_sec }}"
  timeout_sec        = "{{ timeout_sec }}"
}

